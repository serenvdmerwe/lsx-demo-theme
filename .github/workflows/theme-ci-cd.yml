name: Theme CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint JavaScript
        run: npm run lint:js
      - name: Lint CSS
        run: npm run lint:css

  php-checks:
    name: PHP Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer, phpcs
      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Check PHP syntax
        run: find . -name "*.php" -not -path "./vendor/*" -print0 | xargs -0 -n1 php -l
      - name: PHPCS check
        run: vendor/bin/phpcs --standard=.github/linters/phpcs.xml

  accessibility:
    name: Accessibility Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install Pa11y
        run: npm install -g pa11y
      - name: Build theme assets
        run: npm run build
      - name: Start test server
        run: npx serve -p 8080 &
      - name: Run accessibility tests
        run: |
          sleep 3 # Give server time to start
          pa11y http://localhost:8080 --standard WCAG2AA

  test:
    name: Functional Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Start WordPress environment
        run: |
          # Use wp-env if available
          if [ -f ".wp-env.json" ]; then
            npm install -g @wordpress/env
            wp-env start
            echo "WORDPRESS_URL=http://localhost:8889" >> $GITHUB_ENV
          else
            # Fallback for testing
            echo "WORDPRESS_URL=https://example.com" >> $GITHUB_ENV
          fi
      - name: Run Playwright tests
        run: npm test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: test-results/
          retention-days: 30

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: build/
          retention-days: 7

  zip-theme:
    name: Package Theme
    needs: [lint, php-checks, test, build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download build files
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: build/
      - name: Set version
        id: set_version
        run: |
          VERSION=$(grep -m 1 "Version:" style.css | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Create zip package
        run: |
          # Create a clean directory for the theme
          mkdir -p theme-package
          # Copy only production files
          rsync -av --exclude-from='.distignore' --exclude='.git' --exclude='node_modules' --exclude='vendor' . theme-package/
          # Ensure build files are included
          cp -r build/* theme-package/
          # Create the zip file
          cd theme-package && zip -r "../lsx-demo-theme-$VERSION.zip" .
      - name: Upload zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: theme-package
          path: lsx-demo-theme-*.zip
          retention-days: 30
